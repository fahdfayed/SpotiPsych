// import { useEffect, useState } from "react";
// import axios from 'axios';
// import './styles.css'; // Import the CSS file for styles

// function App() {

//   const CLIENT_ID = "2748134a2e6a442780c62d3a01704707"
//   const REDIRECT_URI = "http://localhost:3000"
//   const AUTH_ENDPOINT = "https://accounts.spotify.com/authorize"
//   const RESPONSE_TYPE = "token"
  

//   const [token, setToken] = useState("")
//   const [searchKey, setSearchKey] = useState("")
//   const [artists, setArtists] = useState([])
//   const [users, setUsers] = useState([])

//   useEffect(() => {
//     const hash = window.location.hash
//     let token = window.localStorage.getItem("token")

//     if (!token && hash) {
//       token = hash.substring(1).split("&").find(elem => elem.startsWith("access_token")).split("=")[1]

//       window.location.hash = ""
//       window.localStorage.setItem("token", token)
//     }

//     setToken(token)
//   }, [])

//   const logout = () => {
//     setToken("")
//     window.localStorage.removeItem("token")
//   }

//   const searchArtists = async (e) => {
//     e.preventDefault()
//     const { data } = await axios.get("https://api.spotify.com/v1/search", {
//       headers: {
//         Authorization: `Bearer ${token}`
//       },
//       params: {
//         q: searchKey,
//         type: "artist"
//       }
//     })
    
//     setArtists(data.artists.items)
//     console.log(data);
//   }

//   const UserProfile = async (e) => {
//     e.preventDefault()
//     const { data } = await axios.get("https://api.spotify.com/v1/me", {
//       headers: {
//         Authorization: `Bearer ${token}`
//       }
//     })
    
//     setUsers([data])
//     console.log(data);
//   }

//   const renderArtists = () => {
//     return (
//       <div className="search-results">
//         {artists.map(artist => (
//           <div key={artist.id} className="artist-item">
//             {artist.images.length ? (
//               <img src={artist.images[0].url} alt={artist.name} className="artist-image" />
//             ) : (
//               <div>No Image</div>
//             )}
//             <div className="artist-name">{artist.name}</div>
//           </div>
//         ))}
//       </div>
//     );
//   };
//   const renderProfile = () => {
//     return users.map(user => (
//       <div key={user.id} className="user-profile">
//         {token && user.images.length > 0 && <img src={user.images[0].url} alt="User" className="user-image" />}
//         <div className="user-details">
//           {token && <div className="display-name"> {user.display_name}</div>}
//           {user.country && <div className="country">Country: {user.country}</div>}
//         </div>
//       </div>
//     ));
//   };
  
  
  

//   return (
//     <div className="container">
//       <header className="App-header">
//         <h1 className="neon-glow">SpotiPsych</h1>
       
//         {token ?
//           <form className="search-form" onSubmit={searchArtists}>
//             <input className="search-input" type="text" onChange={e => setSearchKey(e.target.value)} />
//             <button type="submit" className="search-button" >Search</button>
//           </form>
//           : null
//         }
//         {token ? 
//           <button className ="get-tracks-button" onClick={UserProfile}>Get Top 100 Tracks</button>
//           : null
//         }

//         {renderProfile()}
//         {renderArtists()}
        
//         {!token ?
//         <section className="about-us">
//           <h2 className="about-us-title">About Us</h2>
//           <p className="about-us-content">Welcome to SpotiPsych! We are dedicated to exploring the intersection of music and psychology. Please login to continue and find out more!</p>
//         </section>
//         : null
//         }
//         <div className="login-container">
//   {!token ?
//     <a href={`${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`} className="login-button">Login to Spotify</a>
//     : <button className="logout-button" onClick={logout}>Logout</button>}
// </div>
//       </header>
//     </div>
//   );
// }

// export default App;